<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">

	<display-name>DDTS-AC</display-name>
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>

	<!-- spring load Log4j config file -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>WEB-INF/classes/log4j.properties</param-value>
	</context-param>
	<!-- set the  interval of spring refresh and vary the lLog4j config file, unit: millisecond -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>10000</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- load applicationContext.xml and listener -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- spring mvc servlet -->
	<servlet>
		<!-- the name of the servlet configuration file (leave off the suffix -servlet, 
			this is spring's convention) -->
		<servlet-name>spring-mvc</servlet-name>
		<!-- Spring implements the Servlet interface by the DispatcherServlet, 
			also known as the front controller. The requests from the front end arrive 
			first, and goes to the back end to match the appropriate handler. -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- servlet init param -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-mvc.xml</param-value>
		</init-param>
		<!-- Whether the container loads the servlet at startup (Instantiate and 
			call its init() method). Thereafter, the servlet is handled by container 
			without initializing. -->
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

	<!-- servlet mapping -->
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<!-- all the actions which name end with "do", handled by org.springframework.web.servlet.DispatcherServlet. -->
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<!-- home page -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>